
│── app/
│   ├── routers/
│   │   ├── users.py           # User management APIs (register, login, get users)
│   │   ├── transactions.py    # Transactions API (get transactions, add transactions)
│   │   ├── purchases.py       # Purchase API (list purchases, get purchase by ID)
│   │   ├── auth.py            # Authentication (JWT-based login, token handling)
│   │   ├── __init__.py        # Makes this a Python package
│   │
│   ├── models/
│   │   ├── user_model.py      # User table schema
│   │   ├── transaction_model.py # Transactions table schema
│   │   ├── purchase_model.py  # Purchases table schema
│   │   ├── __init__.py        # Makes this a package
│   │
│   ├── database.py            # MySQL database connection setup
│   ├── main.py                # FastAPI entry point (includes routers)
│   ├── config.py              # Configuration settings (DB credentials, JWT secret)
│   ├── utils.py               # Utility functions (hashing passwords, token validation)
│
│── requirements.txt           # Required Python packages
│── Dockerfile                 # Docker container setup
│── docker-compose.yml         # Docker Compose for running FastAPI + MySQL
│── .env                       # Environment variables (DB credentials, JWT secret)
│── README.md                  # Project documentation


//Use the bellow cmd to create the directory and file


mkdir -p app/routers
mkdir -p app/models

# Create Python files
touch app/main.py
touch app/database.py
touch app/config.py
touch app/utils.py

# Create routers
touch app/routers/__init__.py
touch app/routers/users.py
touch app/routers/transactions.py
touch app/routers/purchases.py
touch app/routers/auth.py

# Create models
touch app/models/__init__.py
touch app/models/user_model.py
touch app/models/transaction_model.py
touch app/models/purchase_model.py

# Create other necessary files
touch requirements.txt
touch .env
touch README.md